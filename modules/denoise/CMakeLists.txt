
add_env(oidn-env
	COMPONENTS
		modules-env
)

add_module_lib(oidn-lib
	COMPONENTS
		oidn-env
		warnings-env
)

set(__THIRDPARTY_OIDN_PATH "${GODOT_SOURCE_DIR}/thirdparty/oidn")
add_module_lib(thirdparty-oidn-lib
	OBJECT
	PARENT_LIB
		oidn-lib
	COMPONENTS
		oidn-env
)
target_sources_from_path(thirdparty-oidn-lib PRIVATE "${__THIRDPARTY_OIDN_PATH}"
	"core/api.cpp"
	"core/device.cpp"
	"core/filter.cpp"
	"core/network.cpp"
	"core/autoencoder.cpp"
	"core/transfer_function.cpp"
	"weights/rtlightmap_hdr.gen.cpp"
	"mkl-dnn/src/common/batch_normalization.cpp"
	"mkl-dnn/src/common/concat.cpp"
	"mkl-dnn/src/common/convolution.cpp"
	"mkl-dnn/src/common/convolution_pd.cpp"
	"mkl-dnn/src/common/deconvolution.cpp"
	"mkl-dnn/src/common/eltwise.cpp"
	"mkl-dnn/src/common/engine.cpp"
	"mkl-dnn/src/common/inner_product.cpp"
	"mkl-dnn/src/common/inner_product_pd.cpp"
	"mkl-dnn/src/common/lrn.cpp"
	"mkl-dnn/src/common/memory.cpp"
	"mkl-dnn/src/common/memory_desc_wrapper.cpp"
	"mkl-dnn/src/common/mkldnn_debug.cpp"
	"mkl-dnn/src/common/mkldnn_debug_autogenerated.cpp"
	"mkl-dnn/src/common/pooling.cpp"
	"mkl-dnn/src/common/primitive.cpp"
	"mkl-dnn/src/common/primitive_attr.cpp"
	"mkl-dnn/src/common/primitive_desc.cpp"
	"mkl-dnn/src/common/primitive_exec_types.cpp"
	"mkl-dnn/src/common/primitive_iterator.cpp"
	"mkl-dnn/src/common/query.cpp"
	"mkl-dnn/src/common/reorder.cpp"
	"mkl-dnn/src/common/rnn.cpp"
	"mkl-dnn/src/common/scratchpad.cpp"
	"mkl-dnn/src/common/shuffle.cpp"
	"mkl-dnn/src/common/softmax.cpp"
	"mkl-dnn/src/common/stream.cpp"
	"mkl-dnn/src/common/sum.cpp"
	"mkl-dnn/src/common/utils.cpp"
	"mkl-dnn/src/common/verbose.cpp"
	"mkl-dnn/src/cpu/cpu_barrier.cpp"
	"mkl-dnn/src/cpu/cpu_concat.cpp"
	"mkl-dnn/src/cpu/cpu_engine.cpp"
	"mkl-dnn/src/cpu/cpu_memory.cpp"
	"mkl-dnn/src/cpu/cpu_reducer.cpp"
	"mkl-dnn/src/cpu/cpu_reorder.cpp"
	"mkl-dnn/src/cpu/cpu_sum.cpp"
	"mkl-dnn/src/cpu/jit_avx2_conv_kernel_f32.cpp"
	"mkl-dnn/src/cpu/jit_avx2_convolution.cpp"
	"mkl-dnn/src/cpu/jit_avx512_common_conv_kernel.cpp"
	"mkl-dnn/src/cpu/jit_avx512_common_conv_winograd_kernel_f32.cpp"
	"mkl-dnn/src/cpu/jit_avx512_common_convolution.cpp"
	"mkl-dnn/src/cpu/jit_avx512_common_convolution_winograd.cpp"
	"mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_2x3.cpp"
	"mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3.cpp"
	"mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3_kernel.cpp"
	"mkl-dnn/src/cpu/jit_sse42_conv_kernel_f32.cpp"
	"mkl-dnn/src/cpu/jit_sse42_convolution.cpp"
	"mkl-dnn/src/cpu/jit_transpose_src_utils.cpp"
	"mkl-dnn/src/cpu/jit_uni_eltwise.cpp"
	"mkl-dnn/src/cpu/jit_uni_pool_kernel_f32.cpp"
	"mkl-dnn/src/cpu/jit_uni_pooling.cpp"
	"mkl-dnn/src/cpu/jit_uni_reorder.cpp"
	"mkl-dnn/src/cpu/jit_uni_reorder_utils.cpp"
	"mkl-dnn/src/cpu/jit_utils/jit_utils.cpp"
	"mkl-dnn/src/cpu/jit_utils/jitprofiling/jitprofiling.c"
	"common/platform.cpp"
	"common/thread.cpp"
	"common/tensor.cpp"
)

target_include_directories(oidn-env INTERFACE
	"${__THIRDPARTY_OIDN_PATH}"
	"${__THIRDPARTY_OIDN_PATH}/include"
	"${__THIRDPARTY_OIDN_PATH}/mkl-dnn/include"
	"${__THIRDPARTY_OIDN_PATH}/mkl-dnn/src"
	"${__THIRDPARTY_OIDN_PATH}/mkl-dnn/src/common"
	"${__THIRDPARTY_OIDN_PATH}/mkl-dnn/src/cpu/xbyak"
	"${__THIRDPARTY_OIDN_PATH}/mkl-dnn/src/cpu"
)
target_compile_definitions(oidn-env INTERFACE
	"MKLDNN_THR=MKLDNN_THR_SEQ"
	"OIDN_STATIC_LIB"
	"__STDC_CONSTANT_MACROS"
	"__STDC_LIMIT_MACROS"
	"DISABLE_VERBOSE"
	"MKLDNN_ENABLE_CONCURRENT_EXEC"
	"NDEBUG"
)

if(GODOT_PLATFORM STREQUAL "windows" AND NOT MSVC)
	target_compile_options(thirdparty-oidn-lib PRIVATE "-mstackrealign")
endif()

set(__WEIGHTS_CPP_FILE "${__THIRDPARTY_OIDN_PATH}/weights/rtlightmap_hdr.gen.cpp")

add_python_generator_command(resource_to_cpp cmake_tza_to_cpp
	TARGET_FILES "${__WEIGHTS_CPP_FILE}"
	SOURCE_FILES "${__THIRDPARTY_OIDN_PATH}/weights/rtlightmap_hdr.tza"
	SOURCES_DEPENDENT_TARGET thirdparty-oidn-lib
)

# So files for this library would not be affected by oidn-env.
# I'm not sure this is actually needed, by this is basically what scons version is doing.
add_module_lib(oidn-additional-lib
	OBJECT
	PARENT_LIB
		oidn-lib
	COMPONENTS
		modules-env
		warnings-env
	SOURCES
		"register_types.cpp"
		"lightmap_denoiser.cpp"
)

target_sources(oidn-lib PRIVATE "denoise_wrapper.cpp")

